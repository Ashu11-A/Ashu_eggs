{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2022-10-09T13:25:33-03:00",
    "name": "Frp",
    "author": "matheusn.biolowons@gmail.com",
    "description": "Um proxy reverso r\u00e1pido para ajud\u00e1-lo a expor um servidor local atr\u00e1s de um NAT ou firewall \u00e0 Internet.\r\nVers\u00e3o: 1.0\r\nPor: Ashu\r\nCheck para updates: https:\/\/github.com\/Ashu11-A\/Ashu_eggs",
    "features": null,
    "docker_images": {
        "ghcr.io\/parkervcp\/yolks:ubuntu": "ghcr.io\/parkervcp\/yolks:ubuntu"
    },
    "file_denylist": [],
    "startup": ".\/frps -c .\/frps.ini",
    "config": {
        "files": "{\r\n    \"frps.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"bind_port\": \"bind_port= {{server.build.env.bind_port}}\",\r\n            \"bind_udp_port\": \"bind_udp_port = {{server.build.env.bind_udp_port}}\",\r\n            \"dashboard_addr\": \"dashboard_addr = 0.0.0.0\",\r\n            \"dashboard_port\": \"dashboard_port = {{server.build.env.dashboard_port}}\",\r\n            \"dashboard_user\": \"dashboard_user = {{server.build.env.dashboard_user}}\",\r\n            \"dashboard_pwd\": \"dashboard_pwd = {{server.build.env.dashboard_pwd}}\",\r\n            \"authentication_method\": \"authentication_method = token\",\r\n            \"authenticate_heartbeats\": \"authenticate_heartbeats = true\",\r\n            \"token\": \"token = {{server.build.env.token}}\"\r\n        }\r\n    },\r\n    \"Exemplo_frpc.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"server_port\": \"server_port = {{server.build.env.bind_port}}\",\r\n            \"bind_udp_port\": \"bind_udp_port = {{server.build.env.bind_udp_port}}\",\r\n            \"authentication_method\": \"authentication_method = token\",\r\n            \"authenticate_heartbeats\": \"authenticate_heartbeats = true\",\r\n            \"token\": \"token = {{server.build.env.token}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"frps uses config file: .\/frps.ini\",\r\n    \"userInteraction\": []\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\napt update\r\napt install -y git jq file unzip libtool inetutils-ping tar curl\r\ncd \/mnt\/server\r\nGITHUB_PACKAGE=fatedier\/frp\r\n## get release info and download links\r\nLATEST_JSON=$(curl --silent \"https:\/\/api.github.com\/repos\/$GITHUB_PACKAGE\/releases\" | jq -c '.[]' | head -1)\r\nRELEASES=$(curl --silent \"https:\/\/api.github.com\/repos\/$GITHUB_PACKAGE\/releases\" | jq '.[]')\r\nARCH=$([ \"$(uname -m)\" == \"x86_64\" ] && echo \"amd64\" || echo \"arm64\") \r\nif [ \"${ARCH}\" == \"arm64\" ]; then\r\nif [ -z \"$VERSION\" ] || [ \"$VERSION\" == \"latest\" ]; then\r\necho -e \"defaulting to latest release\"\r\nDOWNLOAD_LINK=$(echo $LATEST_JSON | jq .assets | jq -r .[].browser_download_url | grep -i frp | grep -i linux | grep -i arm64)\r\nelse\r\nVERSION_CHECK=$(echo $RELEASES | jq -r --arg VERSION \"$VERSION\" '. | select(.tag_name==$VERSION) | .tag_name')\r\nif [ \"$VERSION\" == \"$VERSION_CHECK\" ]; then\r\nif [[ \"$VERSION\" == v0* ]]; then\r\nDOWNLOAD_LINK=$(echo $RELEASES | jq -r --arg VERSION \"$VERSION\" '. | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i frp | grep -i linux | grep -i arm64)\r\nelse\r\nDOWNLOAD_LINK=$(echo $RELEASES | jq -r --arg VERSION \"$VERSION\" '. | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i frp | grep -i linux | grep -i arm64)\r\nfi\r\nelse\r\necho -e \"defaulting to latest release\"\r\nDOWNLOAD_LINK=$(echo $LATEST_JSON | jq .assets | jq -r .[].browser_download_url | grep -i frp | grep -i linux | grep -i arm64)\r\nfi\r\nfi\r\nelse\r\nif [ -z \"$VERSION\" ] || [ \"$VERSION\" == \"latest\" ]; then\r\necho -e \"defaulting to latest release\"\r\nDOWNLOAD_LINK=$(echo $LATEST_JSON | jq .assets | jq -r .[].browser_download_url | grep -i frp | grep -i linux | grep -i amd64)\r\nelse\r\nVERSION_CHECK=$(echo $RELEASES | jq -r --arg VERSION \"$VERSION\" '. | select(.tag_name==$VERSION) | .tag_name')\r\nif [ \"$VERSION\" == \"$VERSION_CHECK\" ]; then\r\nif [[ \"$VERSION\" == v0* ]]; then\r\nDOWNLOAD_LINK=$(echo $RELEASES | jq -r --arg VERSION \"$VERSION\" '. | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i frp | grep -i linux | grep -i amd64)\r\nelse\r\nDOWNLOAD_LINK=$(echo $RELEASES | jq -r --arg VERSION \"$VERSION\" '. | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i frp | grep -i linux | grep -i amd64)\r\nfi\r\nelse\r\necho -e \"defaulting to latest release\"\r\nDOWNLOAD_LINK=$(echo $LATEST_JSON | jq .assets | jq -r .[].browser_download_url | grep -i frp | grep -i linux | grep -i amd64)\r\nfi\r\nfi\r\nfi\r\nrm -rf *\r\ncat <<EOF > log.txt\r\nVers\u00e3o: ${VERSION}\r\nVers\u00e3o Limpa: ${CLEAN_VERSION}\r\nVERSION_CHECK: ${VERSION_CHECK}\r\nLink: ${DOWNLOAD_LINK}\r\nArquivo: ${DOWNLOAD_LINK##*\/}\r\nEOF\r\necho -e \"running 'curl -sSL ${DOWNLOAD_LINK} -o ${DOWNLOAD_LINK##*\/}'\"\r\ncurl -sSL ${DOWNLOAD_LINK} -o ${DOWNLOAD_LINK##*\/}\r\necho -e \"Unpacking server files\"\r\ntar -xvzf ${DOWNLOAD_LINK##*\/}\r\ncp -R frp*\/* .\/\r\nrm -rf frp*linux*\r\nrm -rf ${DOWNLOAD_LINK##*\/}\r\nmv frpc.ini Exemplo_frpc.ini\r\ncat <<EOF > Exemplo_frpc.ini\r\n[common]\r\n#Aqui conecta no servidor externo (pode ser ip tambem)\r\nserver_addr = apenas-um.exemplo.net\r\nserver_port = $bind_port\r\nbind_udp_port = $bind_udp_port\r\n#Aqui ira criar um http localmente para voce acessar\r\nadmin_addr = 0.0.0.0\r\nadmin_port = 7500\r\nadmin_user = admin\r\nadmin_pwd = admin\r\n#aqui ira autenticar com o seu servidor externo (Mais seguro desse jeito)\r\nauthenticate_heartbeats = true\r\nauthenticate_new_work_conns = false\r\ntoken = $token\r\n#Exemplo de libera\u00e7\u00e3o de porta\r\n[seu_servi\u00e7o_ou_jogo]\r\ntype = tcp\r\nlocal_ip = 0.0.0.0\r\nlocal_port = 7777\r\nremote_port = 25310\r\nuse_compression = false\r\nEOF\r\ncat <<EOF > frps.ini\r\n[common]\r\n#As portas que ser\u00e3o usadas para permitir que seu frpc externo se conecte no seu servidor\r\nbind_port =\r\nbind_udp_port =\r\n#Aqui ira criar um dashboard no seu servidor local para voce acessar\r\ndashboard_addr =\r\ndashboard_port =\r\ndashboard_user =\r\ndashboard_pwd =\r\n#Como medida de seguran\u00e7a, \u00e9 preciso uma gerar uma senha de autentica\u00e7\u00e3o.\r\nauthentication_method =\r\nauthenticate_heartbeats =\r\ntoken =\r\nEOF\r\necho -e \"install complete\"\r\nexit 0",
            "container": "debian:buster-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Ves\u00e3o",
            "description": "Vers\u00e3o que ser\u00e1 instalada na instala\u00e7\u00e3o do egg.\r\n\r\nEx: v0.44.0 (latest sempre instalar\u00e1 a mais recente)",
            "env_variable": "VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Bind Port",
            "description": "Modifique e defina a porta para ser conectado aos clientes frp.",
            "env_variable": "bind_port",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable|max:20",
            "field_type": "text"
        },
        {
            "name": "Bind UDP Port",
            "description": "Configurar uma porta UDP",
            "env_variable": "bind_udp_port",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable|max:20",
            "field_type": "text"
        },
        {
            "name": "Dashboard Port",
            "description": "Painel\r\nVerifique o status do frp e as informa\u00e7\u00f5es estat\u00edsticas dos proxies pelo Dashboard.\r\n\r\nConfigure uma porta para o painel para habilitar este recurso:",
            "env_variable": "dashboard_port",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable|max:20",
            "field_type": "text"
        },
        {
            "name": "Dashboard User",
            "description": "Nome de usu\u00e1rio para usar no Dashboard",
            "env_variable": "dashboard_user",
            "default_value": "admin",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable|max:20",
            "field_type": "text"
        },
        {
            "name": "Dashboard password",
            "description": "Senha para o Dashboard",
            "env_variable": "dashboard_pwd",
            "default_value": "admin",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable|max:20",
            "field_type": "text"
        },
        {
            "name": "Token",
            "description": "Token para acessar o frp, isso \u00e9 necess\u00e1rio como uma medida de seguran\u00e7a.",
            "env_variable": "token",
            "default_value": "Troque_Isso",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable|max:20",
            "field_type": "text"
        }
    ]
}